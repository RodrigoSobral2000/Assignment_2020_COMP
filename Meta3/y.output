Terminals unused in grammar

    RESERVED


Grammar

    0 $accept: program $end

    1 program: functionsAndDeclarations

    2 functionsAndDeclarations: functionsAndDeclarations functionDefinition
    3                         | functionsAndDeclarations functionDeclaration
    4                         | functionsAndDeclarations declaration
    5                         | functionDefinition
    6                         | functionDeclaration
    7                         | declaration

    8 functionDefinition: typeSpec functionDeclarator functionBody

    9 functionBody: LBRACE RBRACE
   10             | LBRACE declarationsAndStatements RBRACE

   11 declarationsAndStatements: statement declarationsAndStatements
   12                          | declaration declarationsAndStatements
   13                          | statement
   14                          | declaration

   15 functionDeclaration: typeSpec functionDeclarator SEMI

   16 functionDeclarator: ID LPAR parameterList RPAR

   17 parameterList: parameterDeclaration parametersAux

   18 parametersAux: %empty
   19              | parametersAux COMMA parameterDeclaration

   20 parameterDeclaration: typeSpec
   21                     | typeSpec ID

   22 declaration: typeSpec declarator declaratorsAux SEMI
   23            | error SEMI

   24 declaratorsAux: %empty
   25               | declaratorsAux COMMA declarator

   26 typeSpec: CHAR
   27         | INT
   28         | VOID
   29         | SHORT
   30         | DOUBLE

   31 declarator: ID
   32           | ID ASSIGN exprComplete

   33 statement: SEMI
   34          | exprComplete SEMI
   35          | LBRACE statementsAux RBRACE
   36          | LBRACE error RBRACE
   37          | LBRACE RBRACE
   38          | IF LPAR exprComplete RPAR statError
   39          | IF LPAR exprComplete RPAR statError ELSE statError
   40          | WHILE LPAR exprComplete RPAR statError
   41          | RETURN SEMI
   42          | RETURN exprComplete SEMI

   43 statementsAux: statError
   44              | statementsAux statError

   45 statError: statement
   46          | error SEMI

   47 expr: expr ASSIGN expr
   48     | expr PLUS expr
   49     | expr MINUS expr
   50     | expr MUL expr
   51     | expr DIV expr
   52     | expr MOD expr
   53     | expr OR expr
   54     | expr AND expr
   55     | expr BITWISEAND expr
   56     | expr BITWISEOR expr
   57     | expr BITWISEXOR expr
   58     | expr EQ expr
   59     | expr NE expr
   60     | expr LE expr
   61     | expr GE expr
   62     | expr LT expr
   63     | expr GT expr
   64     | PLUS expr
   65     | MINUS expr
   66     | NOT expr
   67     | functionCall
   68     | ID
   69     | INTLIT
   70     | CHRLIT
   71     | REALLIT
   72     | LPAR exprComplete RPAR
   73     | LPAR error RPAR

   74 functionCall: ID LPAR RPAR
   75             | ID LPAR exprList RPAR
   76             | ID LPAR error RPAR

   77 exprList: expr
   78         | exprList COMMA expr

   79 exprComplete: expr
   80             | exprComplete COMMA expr


Terminals, with rules where they appear

    $end (0) 0
    error (256) 23 36 46 73 76
    CHAR <tk> (258) 26
    INT <tk> (259) 27
    SHORT <tk> (260) 29
    DOUBLE <tk> (261) 30
    VOID <tk> (262) 28
    IF <tk> (263) 38 39
    ELSE <tk> (264) 39
    WHILE <tk> (265) 40
    RETURN <tk> (266) 41 42
    LPAR <tk> (267) 16 38 39 40 72 73 74 75 76
    RPAR <tk> (268) 16 38 39 40 72 73 74 75 76
    LBRACE <tk> (269) 9 10 35 36 37
    RBRACE <tk> (270) 9 10 35 36 37
    SEMI <tk> (271) 15 22 23 33 34 41 42 46
    COMMA <tk> (272) 19 25 78 80
    AND <tk> (273) 54
    OR <tk> (274) 53
    BITWISEAND <tk> (275) 55
    BITWISEOR <tk> (276) 56
    BITWISEXOR <tk> (277) 57
    NE <tk> (278) 59
    EQ <tk> (279) 58
    GE <tk> (280) 61
    GT <tk> (281) 63
    LE <tk> (282) 60
    LT <tk> (283) 62
    NOT <tk> (284) 66
    ASSIGN <tk> (285) 32 47
    MUL <tk> (286) 50
    PLUS <tk> (287) 48 64
    MINUS <tk> (288) 49 65
    DIV <tk> (289) 51
    MOD <tk> (290) 52
    RESERVED <tk> (291)
    ID <tk> (292) 16 21 31 32 68 74 75 76
    CHRLIT <tk> (293) 70
    REALLIT <tk> (294) 71
    INTLIT <tk> (295) 69
    THEN (296)


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    program <n> (43)
        on left: 1
        on right: 0
    functionsAndDeclarations <n> (44)
        on left: 2 3 4 5 6 7
        on right: 1 2 3 4
    functionDefinition <n> (45)
        on left: 8
        on right: 2 5
    functionBody <n> (46)
        on left: 9 10
        on right: 8
    declarationsAndStatements <n> (47)
        on left: 11 12 13 14
        on right: 10 11 12
    functionDeclaration <n> (48)
        on left: 15
        on right: 3 6
    functionDeclarator <n> (49)
        on left: 16
        on right: 8 15
    parameterList <n> (50)
        on left: 17
        on right: 16
    parametersAux <n> (51)
        on left: 18 19
        on right: 17 19
    parameterDeclaration <n> (52)
        on left: 20 21
        on right: 17 19
    declaration <n> (53)
        on left: 22 23
        on right: 4 7 12 14
    declaratorsAux <n> (54)
        on left: 24 25
        on right: 22 25
    typeSpec <n> (55)
        on left: 26 27 28 29 30
        on right: 8 15 20 21 22
    declarator <n> (56)
        on left: 31 32
        on right: 22 25
    statement <n> (57)
        on left: 33 34 35 36 37 38 39 40 41 42
        on right: 11 13 45
    statementsAux <n> (58)
        on left: 43 44
        on right: 35 44
    statError <n> (59)
        on left: 45 46
        on right: 38 39 40 43 44
    expr <n> (60)
        on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73
        on right: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 77 78 79 80
    functionCall <n> (61)
        on left: 74 75 76
        on right: 67
    exprList <n> (62)
        on left: 77 78
        on right: 75 78
    exprComplete <n> (63)
        on left: 79 80
        on right: 32 34 38 39 40 42 72 80


State 0

    0 $accept: . program $end

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    program                   go to state 7
    functionsAndDeclarations  go to state 8
    functionDefinition        go to state 9
    functionDeclaration       go to state 10
    declaration               go to state 11
    typeSpec                  go to state 12


State 1

   23 declaration: error . SEMI

    SEMI  shift, and go to state 13


State 2

   26 typeSpec: CHAR .

    $default  reduce using rule 26 (typeSpec)


State 3

   27 typeSpec: INT .

    $default  reduce using rule 27 (typeSpec)


State 4

   29 typeSpec: SHORT .

    $default  reduce using rule 29 (typeSpec)


State 5

   30 typeSpec: DOUBLE .

    $default  reduce using rule 30 (typeSpec)


State 6

   28 typeSpec: VOID .

    $default  reduce using rule 28 (typeSpec)


State 7

    0 $accept: program . $end

    $end  shift, and go to state 14


State 8

    1 program: functionsAndDeclarations .
    2 functionsAndDeclarations: functionsAndDeclarations . functionDefinition
    3                         | functionsAndDeclarations . functionDeclaration
    4                         | functionsAndDeclarations . declaration

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 1 (program)

    functionDefinition   go to state 15
    functionDeclaration  go to state 16
    declaration          go to state 17
    typeSpec             go to state 12


State 9

    5 functionsAndDeclarations: functionDefinition .

    $default  reduce using rule 5 (functionsAndDeclarations)


State 10

    6 functionsAndDeclarations: functionDeclaration .

    $default  reduce using rule 6 (functionsAndDeclarations)


State 11

    7 functionsAndDeclarations: declaration .

    $default  reduce using rule 7 (functionsAndDeclarations)


State 12

    8 functionDefinition: typeSpec . functionDeclarator functionBody
   15 functionDeclaration: typeSpec . functionDeclarator SEMI
   22 declaration: typeSpec . declarator declaratorsAux SEMI

    ID  shift, and go to state 18

    functionDeclarator  go to state 19
    declarator          go to state 20


State 13

   23 declaration: error SEMI .

    $default  reduce using rule 23 (declaration)


State 14

    0 $accept: program $end .

    $default  accept


State 15

    2 functionsAndDeclarations: functionsAndDeclarations functionDefinition .

    $default  reduce using rule 2 (functionsAndDeclarations)


State 16

    3 functionsAndDeclarations: functionsAndDeclarations functionDeclaration .

    $default  reduce using rule 3 (functionsAndDeclarations)


State 17

    4 functionsAndDeclarations: functionsAndDeclarations declaration .

    $default  reduce using rule 4 (functionsAndDeclarations)


State 18

   16 functionDeclarator: ID . LPAR parameterList RPAR
   31 declarator: ID .
   32           | ID . ASSIGN exprComplete

    LPAR    shift, and go to state 21
    ASSIGN  shift, and go to state 22

    $default  reduce using rule 31 (declarator)


State 19

    8 functionDefinition: typeSpec functionDeclarator . functionBody
   15 functionDeclaration: typeSpec functionDeclarator . SEMI

    LBRACE  shift, and go to state 23
    SEMI    shift, and go to state 24

    functionBody  go to state 25


State 20

   22 declaration: typeSpec declarator . declaratorsAux SEMI

    $default  reduce using rule 24 (declaratorsAux)

    declaratorsAux  go to state 26


State 21

   16 functionDeclarator: ID LPAR . parameterList RPAR

    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    parameterList         go to state 27
    parameterDeclaration  go to state 28
    typeSpec              go to state 29


State 22

   32 declarator: ID ASSIGN . exprComplete

    LPAR     shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 38
    functionCall  go to state 39
    exprComplete  go to state 40


State 23

    9 functionBody: LBRACE . RBRACE
   10             | LBRACE . declarationsAndStatements RBRACE

    error    shift, and go to state 1
    CHAR     shift, and go to state 2
    INT      shift, and go to state 3
    SHORT    shift, and go to state 4
    DOUBLE   shift, and go to state 5
    VOID     shift, and go to state 6
    IF       shift, and go to state 41
    WHILE    shift, and go to state 42
    RETURN   shift, and go to state 43
    LPAR     shift, and go to state 30
    LBRACE   shift, and go to state 44
    RBRACE   shift, and go to state 45
    SEMI     shift, and go to state 46
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    declarationsAndStatements  go to state 47
    declaration                go to state 48
    typeSpec                   go to state 49
    statement                  go to state 50
    expr                       go to state 38
    functionCall               go to state 39
    exprComplete               go to state 51


State 24

   15 functionDeclaration: typeSpec functionDeclarator SEMI .

    $default  reduce using rule 15 (functionDeclaration)


State 25

    8 functionDefinition: typeSpec functionDeclarator functionBody .

    $default  reduce using rule 8 (functionDefinition)


State 26

   22 declaration: typeSpec declarator declaratorsAux . SEMI
   25 declaratorsAux: declaratorsAux . COMMA declarator

    SEMI   shift, and go to state 52
    COMMA  shift, and go to state 53


State 27

   16 functionDeclarator: ID LPAR parameterList . RPAR

    RPAR  shift, and go to state 54


State 28

   17 parameterList: parameterDeclaration . parametersAux

    $default  reduce using rule 18 (parametersAux)

    parametersAux  go to state 55


State 29

   20 parameterDeclaration: typeSpec .
   21                     | typeSpec . ID

    ID  shift, and go to state 56

    $default  reduce using rule 20 (parameterDeclaration)


State 30

   72 expr: LPAR . exprComplete RPAR
   73     | LPAR . error RPAR

    error    shift, and go to state 57
    LPAR     shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 38
    functionCall  go to state 39
    exprComplete  go to state 58


State 31

   66 expr: NOT . expr

    LPAR     shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 59
    functionCall  go to state 39


State 32

   64 expr: PLUS . expr

    LPAR     shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 60
    functionCall  go to state 39


State 33

   65 expr: MINUS . expr

    LPAR     shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 61
    functionCall  go to state 39


State 34

   68 expr: ID .
   74 functionCall: ID . LPAR RPAR
   75             | ID . LPAR exprList RPAR
   76             | ID . LPAR error RPAR

    LPAR  shift, and go to state 62

    $default  reduce using rule 68 (expr)


State 35

   70 expr: CHRLIT .

    $default  reduce using rule 70 (expr)


State 36

   71 expr: REALLIT .

    $default  reduce using rule 71 (expr)


State 37

   69 expr: INTLIT .

    $default  reduce using rule 69 (expr)


State 38

   47 expr: expr . ASSIGN expr
   48     | expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   53     | expr . OR expr
   54     | expr . AND expr
   55     | expr . BITWISEAND expr
   56     | expr . BITWISEOR expr
   57     | expr . BITWISEXOR expr
   58     | expr . EQ expr
   59     | expr . NE expr
   60     | expr . LE expr
   61     | expr . GE expr
   62     | expr . LT expr
   63     | expr . GT expr
   79 exprComplete: expr .

    AND         shift, and go to state 63
    OR          shift, and go to state 64
    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    NE          shift, and go to state 68
    EQ          shift, and go to state 69
    GE          shift, and go to state 70
    GT          shift, and go to state 71
    LE          shift, and go to state 72
    LT          shift, and go to state 73
    ASSIGN      shift, and go to state 74
    MUL         shift, and go to state 75
    PLUS        shift, and go to state 76
    MINUS       shift, and go to state 77
    DIV         shift, and go to state 78
    MOD         shift, and go to state 79

    $default  reduce using rule 79 (exprComplete)


State 39

   67 expr: functionCall .

    $default  reduce using rule 67 (expr)


State 40

   32 declarator: ID ASSIGN exprComplete .
   80 exprComplete: exprComplete . COMMA expr

    $default  reduce using rule 32 (declarator)


State 41

   38 statement: IF . LPAR exprComplete RPAR statError
   39          | IF . LPAR exprComplete RPAR statError ELSE statError

    LPAR  shift, and go to state 81


State 42

   40 statement: WHILE . LPAR exprComplete RPAR statError

    LPAR  shift, and go to state 82


State 43

   41 statement: RETURN . SEMI
   42          | RETURN . exprComplete SEMI

    LPAR     shift, and go to state 30
    SEMI     shift, and go to state 83
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 38
    functionCall  go to state 39
    exprComplete  go to state 84


State 44

   35 statement: LBRACE . statementsAux RBRACE
   36          | LBRACE . error RBRACE
   37          | LBRACE . RBRACE

    error    shift, and go to state 85
    IF       shift, and go to state 41
    WHILE    shift, and go to state 42
    RETURN   shift, and go to state 43
    LPAR     shift, and go to state 30
    LBRACE   shift, and go to state 44
    RBRACE   shift, and go to state 86
    SEMI     shift, and go to state 46
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    statement      go to state 87
    statementsAux  go to state 88
    statError      go to state 89
    expr           go to state 38
    functionCall   go to state 39
    exprComplete   go to state 51


State 45

    9 functionBody: LBRACE RBRACE .

    $default  reduce using rule 9 (functionBody)


State 46

   33 statement: SEMI .

    $default  reduce using rule 33 (statement)


State 47

   10 functionBody: LBRACE declarationsAndStatements . RBRACE

    RBRACE  shift, and go to state 90


State 48

   12 declarationsAndStatements: declaration . declarationsAndStatements
   14                          | declaration .

    error    shift, and go to state 1
    CHAR     shift, and go to state 2
    INT      shift, and go to state 3
    SHORT    shift, and go to state 4
    DOUBLE   shift, and go to state 5
    VOID     shift, and go to state 6
    IF       shift, and go to state 41
    WHILE    shift, and go to state 42
    RETURN   shift, and go to state 43
    LPAR     shift, and go to state 30
    LBRACE   shift, and go to state 44
    SEMI     shift, and go to state 46
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    RBRACE  reduce using rule 14 (declarationsAndStatements)

    declarationsAndStatements  go to state 91
    declaration                go to state 48
    typeSpec                   go to state 49
    statement                  go to state 50
    expr                       go to state 38
    functionCall               go to state 39
    exprComplete               go to state 51


State 49

   22 declaration: typeSpec . declarator declaratorsAux SEMI

    ID  shift, and go to state 92

    declarator  go to state 20


State 50

   11 declarationsAndStatements: statement . declarationsAndStatements
   13                          | statement .

    error    shift, and go to state 1
    CHAR     shift, and go to state 2
    INT      shift, and go to state 3
    SHORT    shift, and go to state 4
    DOUBLE   shift, and go to state 5
    VOID     shift, and go to state 6
    IF       shift, and go to state 41
    WHILE    shift, and go to state 42
    RETURN   shift, and go to state 43
    LPAR     shift, and go to state 30
    LBRACE   shift, and go to state 44
    SEMI     shift, and go to state 46
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    RBRACE  reduce using rule 13 (declarationsAndStatements)

    declarationsAndStatements  go to state 93
    declaration                go to state 48
    typeSpec                   go to state 49
    statement                  go to state 50
    expr                       go to state 38
    functionCall               go to state 39
    exprComplete               go to state 51


State 51

   34 statement: exprComplete . SEMI
   80 exprComplete: exprComplete . COMMA expr

    SEMI   shift, and go to state 94
    COMMA  shift, and go to state 80


State 52

   22 declaration: typeSpec declarator declaratorsAux SEMI .

    $default  reduce using rule 22 (declaration)


State 53

   25 declaratorsAux: declaratorsAux COMMA . declarator

    ID  shift, and go to state 92

    declarator  go to state 95


State 54

   16 functionDeclarator: ID LPAR parameterList RPAR .

    $default  reduce using rule 16 (functionDeclarator)


State 55

   17 parameterList: parameterDeclaration parametersAux .
   19 parametersAux: parametersAux . COMMA parameterDeclaration

    COMMA  shift, and go to state 96

    $default  reduce using rule 17 (parameterList)


State 56

   21 parameterDeclaration: typeSpec ID .

    $default  reduce using rule 21 (parameterDeclaration)


State 57

   73 expr: LPAR error . RPAR

    RPAR  shift, and go to state 97


State 58

   72 expr: LPAR exprComplete . RPAR
   80 exprComplete: exprComplete . COMMA expr

    RPAR   shift, and go to state 98
    COMMA  shift, and go to state 80


State 59

   47 expr: expr . ASSIGN expr
   48     | expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   53     | expr . OR expr
   54     | expr . AND expr
   55     | expr . BITWISEAND expr
   56     | expr . BITWISEOR expr
   57     | expr . BITWISEXOR expr
   58     | expr . EQ expr
   59     | expr . NE expr
   60     | expr . LE expr
   61     | expr . GE expr
   62     | expr . LT expr
   63     | expr . GT expr
   66     | NOT expr .

    $default  reduce using rule 66 (expr)


State 60

   47 expr: expr . ASSIGN expr
   48     | expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   53     | expr . OR expr
   54     | expr . AND expr
   55     | expr . BITWISEAND expr
   56     | expr . BITWISEOR expr
   57     | expr . BITWISEXOR expr
   58     | expr . EQ expr
   59     | expr . NE expr
   60     | expr . LE expr
   61     | expr . GE expr
   62     | expr . LT expr
   63     | expr . GT expr
   64     | PLUS expr .

    $default  reduce using rule 64 (expr)


State 61

   47 expr: expr . ASSIGN expr
   48     | expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   53     | expr . OR expr
   54     | expr . AND expr
   55     | expr . BITWISEAND expr
   56     | expr . BITWISEOR expr
   57     | expr . BITWISEXOR expr
   58     | expr . EQ expr
   59     | expr . NE expr
   60     | expr . LE expr
   61     | expr . GE expr
   62     | expr . LT expr
   63     | expr . GT expr
   65     | MINUS expr .

    $default  reduce using rule 65 (expr)


State 62

   74 functionCall: ID LPAR . RPAR
   75             | ID LPAR . exprList RPAR
   76             | ID LPAR . error RPAR

    error    shift, and go to state 99
    LPAR     shift, and go to state 30
    RPAR     shift, and go to state 100
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 101
    functionCall  go to state 39
    exprList      go to state 102


State 63

   54 expr: expr AND . expr

    LPAR     shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 103
    functionCall  go to state 39


State 64

   53 expr: expr OR . expr

    LPAR     shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 104
    functionCall  go to state 39


State 65

   55 expr: expr BITWISEAND . expr

    LPAR     shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 105
    functionCall  go to state 39


State 66

   56 expr: expr BITWISEOR . expr

    LPAR     shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 106
    functionCall  go to state 39


State 67

   57 expr: expr BITWISEXOR . expr

    LPAR     shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 107
    functionCall  go to state 39


State 68

   59 expr: expr NE . expr

    LPAR     shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 108
    functionCall  go to state 39


State 69

   58 expr: expr EQ . expr

    LPAR     shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 109
    functionCall  go to state 39


State 70

   61 expr: expr GE . expr

    LPAR     shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 110
    functionCall  go to state 39


State 71

   63 expr: expr GT . expr

    LPAR     shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 111
    functionCall  go to state 39


State 72

   60 expr: expr LE . expr

    LPAR     shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 112
    functionCall  go to state 39


State 73

   62 expr: expr LT . expr

    LPAR     shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 113
    functionCall  go to state 39


State 74

   47 expr: expr ASSIGN . expr

    LPAR     shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 114
    functionCall  go to state 39


State 75

   50 expr: expr MUL . expr

    LPAR     shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 115
    functionCall  go to state 39


State 76

   48 expr: expr PLUS . expr

    LPAR     shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 116
    functionCall  go to state 39


State 77

   49 expr: expr MINUS . expr

    LPAR     shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 117
    functionCall  go to state 39


State 78

   51 expr: expr DIV . expr

    LPAR     shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 118
    functionCall  go to state 39


State 79

   52 expr: expr MOD . expr

    LPAR     shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 119
    functionCall  go to state 39


State 80

   80 exprComplete: exprComplete COMMA . expr

    LPAR     shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 120
    functionCall  go to state 39


State 81

   38 statement: IF LPAR . exprComplete RPAR statError
   39          | IF LPAR . exprComplete RPAR statError ELSE statError

    LPAR     shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 38
    functionCall  go to state 39
    exprComplete  go to state 121


State 82

   40 statement: WHILE LPAR . exprComplete RPAR statError

    LPAR     shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 38
    functionCall  go to state 39
    exprComplete  go to state 122


State 83

   41 statement: RETURN SEMI .

    $default  reduce using rule 41 (statement)


State 84

   42 statement: RETURN exprComplete . SEMI
   80 exprComplete: exprComplete . COMMA expr

    SEMI   shift, and go to state 123
    COMMA  shift, and go to state 80


State 85

   36 statement: LBRACE error . RBRACE
   46 statError: error . SEMI

    RBRACE  shift, and go to state 124
    SEMI    shift, and go to state 125


State 86

   37 statement: LBRACE RBRACE .

    $default  reduce using rule 37 (statement)


State 87

   45 statError: statement .

    $default  reduce using rule 45 (statError)


State 88

   35 statement: LBRACE statementsAux . RBRACE
   44 statementsAux: statementsAux . statError

    error    shift, and go to state 126
    IF       shift, and go to state 41
    WHILE    shift, and go to state 42
    RETURN   shift, and go to state 43
    LPAR     shift, and go to state 30
    LBRACE   shift, and go to state 44
    RBRACE   shift, and go to state 127
    SEMI     shift, and go to state 46
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    statement     go to state 87
    statError     go to state 128
    expr          go to state 38
    functionCall  go to state 39
    exprComplete  go to state 51


State 89

   43 statementsAux: statError .

    $default  reduce using rule 43 (statementsAux)


State 90

   10 functionBody: LBRACE declarationsAndStatements RBRACE .

    $default  reduce using rule 10 (functionBody)


State 91

   12 declarationsAndStatements: declaration declarationsAndStatements .

    $default  reduce using rule 12 (declarationsAndStatements)


State 92

   31 declarator: ID .
   32           | ID . ASSIGN exprComplete

    ASSIGN  shift, and go to state 22

    $default  reduce using rule 31 (declarator)


State 93

   11 declarationsAndStatements: statement declarationsAndStatements .

    $default  reduce using rule 11 (declarationsAndStatements)


State 94

   34 statement: exprComplete SEMI .

    $default  reduce using rule 34 (statement)


State 95

   25 declaratorsAux: declaratorsAux COMMA declarator .

    $default  reduce using rule 25 (declaratorsAux)


State 96

   19 parametersAux: parametersAux COMMA . parameterDeclaration

    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    parameterDeclaration  go to state 129
    typeSpec              go to state 29


State 97

   73 expr: LPAR error RPAR .

    $default  reduce using rule 73 (expr)


State 98

   72 expr: LPAR exprComplete RPAR .

    $default  reduce using rule 72 (expr)


State 99

   76 functionCall: ID LPAR error . RPAR

    RPAR  shift, and go to state 130


State 100

   74 functionCall: ID LPAR RPAR .

    $default  reduce using rule 74 (functionCall)


State 101

   47 expr: expr . ASSIGN expr
   48     | expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   53     | expr . OR expr
   54     | expr . AND expr
   55     | expr . BITWISEAND expr
   56     | expr . BITWISEOR expr
   57     | expr . BITWISEXOR expr
   58     | expr . EQ expr
   59     | expr . NE expr
   60     | expr . LE expr
   61     | expr . GE expr
   62     | expr . LT expr
   63     | expr . GT expr
   77 exprList: expr .

    AND         shift, and go to state 63
    OR          shift, and go to state 64
    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    NE          shift, and go to state 68
    EQ          shift, and go to state 69
    GE          shift, and go to state 70
    GT          shift, and go to state 71
    LE          shift, and go to state 72
    LT          shift, and go to state 73
    ASSIGN      shift, and go to state 74
    MUL         shift, and go to state 75
    PLUS        shift, and go to state 76
    MINUS       shift, and go to state 77
    DIV         shift, and go to state 78
    MOD         shift, and go to state 79

    $default  reduce using rule 77 (exprList)


State 102

   75 functionCall: ID LPAR exprList . RPAR
   78 exprList: exprList . COMMA expr

    RPAR   shift, and go to state 131
    COMMA  shift, and go to state 132


State 103

   47 expr: expr . ASSIGN expr
   48     | expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   53     | expr . OR expr
   54     | expr . AND expr
   54     | expr AND expr .
   55     | expr . BITWISEAND expr
   56     | expr . BITWISEOR expr
   57     | expr . BITWISEXOR expr
   58     | expr . EQ expr
   59     | expr . NE expr
   60     | expr . LE expr
   61     | expr . GE expr
   62     | expr . LT expr
   63     | expr . GT expr

    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    NE          shift, and go to state 68
    EQ          shift, and go to state 69
    GE          shift, and go to state 70
    GT          shift, and go to state 71
    LE          shift, and go to state 72
    LT          shift, and go to state 73
    MUL         shift, and go to state 75
    PLUS        shift, and go to state 76
    MINUS       shift, and go to state 77
    DIV         shift, and go to state 78
    MOD         shift, and go to state 79

    $default  reduce using rule 54 (expr)


State 104

   47 expr: expr . ASSIGN expr
   48     | expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   53     | expr . OR expr
   53     | expr OR expr .
   54     | expr . AND expr
   55     | expr . BITWISEAND expr
   56     | expr . BITWISEOR expr
   57     | expr . BITWISEXOR expr
   58     | expr . EQ expr
   59     | expr . NE expr
   60     | expr . LE expr
   61     | expr . GE expr
   62     | expr . LT expr
   63     | expr . GT expr

    AND         shift, and go to state 63
    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    NE          shift, and go to state 68
    EQ          shift, and go to state 69
    GE          shift, and go to state 70
    GT          shift, and go to state 71
    LE          shift, and go to state 72
    LT          shift, and go to state 73
    MUL         shift, and go to state 75
    PLUS        shift, and go to state 76
    MINUS       shift, and go to state 77
    DIV         shift, and go to state 78
    MOD         shift, and go to state 79

    $default  reduce using rule 53 (expr)


State 105

   47 expr: expr . ASSIGN expr
   48     | expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   53     | expr . OR expr
   54     | expr . AND expr
   55     | expr . BITWISEAND expr
   55     | expr BITWISEAND expr .
   56     | expr . BITWISEOR expr
   57     | expr . BITWISEXOR expr
   58     | expr . EQ expr
   59     | expr . NE expr
   60     | expr . LE expr
   61     | expr . GE expr
   62     | expr . LT expr
   63     | expr . GT expr

    NE     shift, and go to state 68
    EQ     shift, and go to state 69
    GE     shift, and go to state 70
    GT     shift, and go to state 71
    LE     shift, and go to state 72
    LT     shift, and go to state 73
    MUL    shift, and go to state 75
    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    $default  reduce using rule 55 (expr)


State 106

   47 expr: expr . ASSIGN expr
   48     | expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   53     | expr . OR expr
   54     | expr . AND expr
   55     | expr . BITWISEAND expr
   56     | expr . BITWISEOR expr
   56     | expr BITWISEOR expr .
   57     | expr . BITWISEXOR expr
   58     | expr . EQ expr
   59     | expr . NE expr
   60     | expr . LE expr
   61     | expr . GE expr
   62     | expr . LT expr
   63     | expr . GT expr

    BITWISEAND  shift, and go to state 65
    BITWISEXOR  shift, and go to state 67
    NE          shift, and go to state 68
    EQ          shift, and go to state 69
    GE          shift, and go to state 70
    GT          shift, and go to state 71
    LE          shift, and go to state 72
    LT          shift, and go to state 73
    MUL         shift, and go to state 75
    PLUS        shift, and go to state 76
    MINUS       shift, and go to state 77
    DIV         shift, and go to state 78
    MOD         shift, and go to state 79

    $default  reduce using rule 56 (expr)


State 107

   47 expr: expr . ASSIGN expr
   48     | expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   53     | expr . OR expr
   54     | expr . AND expr
   55     | expr . BITWISEAND expr
   56     | expr . BITWISEOR expr
   57     | expr . BITWISEXOR expr
   57     | expr BITWISEXOR expr .
   58     | expr . EQ expr
   59     | expr . NE expr
   60     | expr . LE expr
   61     | expr . GE expr
   62     | expr . LT expr
   63     | expr . GT expr

    BITWISEAND  shift, and go to state 65
    NE          shift, and go to state 68
    EQ          shift, and go to state 69
    GE          shift, and go to state 70
    GT          shift, and go to state 71
    LE          shift, and go to state 72
    LT          shift, and go to state 73
    MUL         shift, and go to state 75
    PLUS        shift, and go to state 76
    MINUS       shift, and go to state 77
    DIV         shift, and go to state 78
    MOD         shift, and go to state 79

    $default  reduce using rule 57 (expr)


State 108

   47 expr: expr . ASSIGN expr
   48     | expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   53     | expr . OR expr
   54     | expr . AND expr
   55     | expr . BITWISEAND expr
   56     | expr . BITWISEOR expr
   57     | expr . BITWISEXOR expr
   58     | expr . EQ expr
   59     | expr . NE expr
   59     | expr NE expr .
   60     | expr . LE expr
   61     | expr . GE expr
   62     | expr . LT expr
   63     | expr . GT expr

    GE     shift, and go to state 70
    GT     shift, and go to state 71
    LE     shift, and go to state 72
    LT     shift, and go to state 73
    MUL    shift, and go to state 75
    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    $default  reduce using rule 59 (expr)


State 109

   47 expr: expr . ASSIGN expr
   48     | expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   53     | expr . OR expr
   54     | expr . AND expr
   55     | expr . BITWISEAND expr
   56     | expr . BITWISEOR expr
   57     | expr . BITWISEXOR expr
   58     | expr . EQ expr
   58     | expr EQ expr .
   59     | expr . NE expr
   60     | expr . LE expr
   61     | expr . GE expr
   62     | expr . LT expr
   63     | expr . GT expr

    GE     shift, and go to state 70
    GT     shift, and go to state 71
    LE     shift, and go to state 72
    LT     shift, and go to state 73
    MUL    shift, and go to state 75
    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    $default  reduce using rule 58 (expr)


State 110

   47 expr: expr . ASSIGN expr
   48     | expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   53     | expr . OR expr
   54     | expr . AND expr
   55     | expr . BITWISEAND expr
   56     | expr . BITWISEOR expr
   57     | expr . BITWISEXOR expr
   58     | expr . EQ expr
   59     | expr . NE expr
   60     | expr . LE expr
   61     | expr . GE expr
   61     | expr GE expr .
   62     | expr . LT expr
   63     | expr . GT expr

    MUL    shift, and go to state 75
    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    $default  reduce using rule 61 (expr)


State 111

   47 expr: expr . ASSIGN expr
   48     | expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   53     | expr . OR expr
   54     | expr . AND expr
   55     | expr . BITWISEAND expr
   56     | expr . BITWISEOR expr
   57     | expr . BITWISEXOR expr
   58     | expr . EQ expr
   59     | expr . NE expr
   60     | expr . LE expr
   61     | expr . GE expr
   62     | expr . LT expr
   63     | expr . GT expr
   63     | expr GT expr .

    MUL    shift, and go to state 75
    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    $default  reduce using rule 63 (expr)


State 112

   47 expr: expr . ASSIGN expr
   48     | expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   53     | expr . OR expr
   54     | expr . AND expr
   55     | expr . BITWISEAND expr
   56     | expr . BITWISEOR expr
   57     | expr . BITWISEXOR expr
   58     | expr . EQ expr
   59     | expr . NE expr
   60     | expr . LE expr
   60     | expr LE expr .
   61     | expr . GE expr
   62     | expr . LT expr
   63     | expr . GT expr

    MUL    shift, and go to state 75
    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    $default  reduce using rule 60 (expr)


State 113

   47 expr: expr . ASSIGN expr
   48     | expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   53     | expr . OR expr
   54     | expr . AND expr
   55     | expr . BITWISEAND expr
   56     | expr . BITWISEOR expr
   57     | expr . BITWISEXOR expr
   58     | expr . EQ expr
   59     | expr . NE expr
   60     | expr . LE expr
   61     | expr . GE expr
   62     | expr . LT expr
   62     | expr LT expr .
   63     | expr . GT expr

    MUL    shift, and go to state 75
    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    $default  reduce using rule 62 (expr)


State 114

   47 expr: expr . ASSIGN expr
   47     | expr ASSIGN expr .
   48     | expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   53     | expr . OR expr
   54     | expr . AND expr
   55     | expr . BITWISEAND expr
   56     | expr . BITWISEOR expr
   57     | expr . BITWISEXOR expr
   58     | expr . EQ expr
   59     | expr . NE expr
   60     | expr . LE expr
   61     | expr . GE expr
   62     | expr . LT expr
   63     | expr . GT expr

    AND         shift, and go to state 63
    OR          shift, and go to state 64
    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    NE          shift, and go to state 68
    EQ          shift, and go to state 69
    GE          shift, and go to state 70
    GT          shift, and go to state 71
    LE          shift, and go to state 72
    LT          shift, and go to state 73
    ASSIGN      shift, and go to state 74
    MUL         shift, and go to state 75
    PLUS        shift, and go to state 76
    MINUS       shift, and go to state 77
    DIV         shift, and go to state 78
    MOD         shift, and go to state 79

    $default  reduce using rule 47 (expr)


State 115

   47 expr: expr . ASSIGN expr
   48     | expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . MUL expr
   50     | expr MUL expr .
   51     | expr . DIV expr
   52     | expr . MOD expr
   53     | expr . OR expr
   54     | expr . AND expr
   55     | expr . BITWISEAND expr
   56     | expr . BITWISEOR expr
   57     | expr . BITWISEXOR expr
   58     | expr . EQ expr
   59     | expr . NE expr
   60     | expr . LE expr
   61     | expr . GE expr
   62     | expr . LT expr
   63     | expr . GT expr

    $default  reduce using rule 50 (expr)


State 116

   47 expr: expr . ASSIGN expr
   48     | expr . PLUS expr
   48     | expr PLUS expr .
   49     | expr . MINUS expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   53     | expr . OR expr
   54     | expr . AND expr
   55     | expr . BITWISEAND expr
   56     | expr . BITWISEOR expr
   57     | expr . BITWISEXOR expr
   58     | expr . EQ expr
   59     | expr . NE expr
   60     | expr . LE expr
   61     | expr . GE expr
   62     | expr . LT expr
   63     | expr . GT expr

    MUL  shift, and go to state 75
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 48 (expr)


State 117

   47 expr: expr . ASSIGN expr
   48     | expr . PLUS expr
   49     | expr . MINUS expr
   49     | expr MINUS expr .
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   53     | expr . OR expr
   54     | expr . AND expr
   55     | expr . BITWISEAND expr
   56     | expr . BITWISEOR expr
   57     | expr . BITWISEXOR expr
   58     | expr . EQ expr
   59     | expr . NE expr
   60     | expr . LE expr
   61     | expr . GE expr
   62     | expr . LT expr
   63     | expr . GT expr

    MUL  shift, and go to state 75
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 49 (expr)


State 118

   47 expr: expr . ASSIGN expr
   48     | expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   51     | expr DIV expr .
   52     | expr . MOD expr
   53     | expr . OR expr
   54     | expr . AND expr
   55     | expr . BITWISEAND expr
   56     | expr . BITWISEOR expr
   57     | expr . BITWISEXOR expr
   58     | expr . EQ expr
   59     | expr . NE expr
   60     | expr . LE expr
   61     | expr . GE expr
   62     | expr . LT expr
   63     | expr . GT expr

    $default  reduce using rule 51 (expr)


State 119

   47 expr: expr . ASSIGN expr
   48     | expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   52     | expr MOD expr .
   53     | expr . OR expr
   54     | expr . AND expr
   55     | expr . BITWISEAND expr
   56     | expr . BITWISEOR expr
   57     | expr . BITWISEXOR expr
   58     | expr . EQ expr
   59     | expr . NE expr
   60     | expr . LE expr
   61     | expr . GE expr
   62     | expr . LT expr
   63     | expr . GT expr

    $default  reduce using rule 52 (expr)


State 120

   47 expr: expr . ASSIGN expr
   48     | expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   53     | expr . OR expr
   54     | expr . AND expr
   55     | expr . BITWISEAND expr
   56     | expr . BITWISEOR expr
   57     | expr . BITWISEXOR expr
   58     | expr . EQ expr
   59     | expr . NE expr
   60     | expr . LE expr
   61     | expr . GE expr
   62     | expr . LT expr
   63     | expr . GT expr
   80 exprComplete: exprComplete COMMA expr .

    AND         shift, and go to state 63
    OR          shift, and go to state 64
    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    NE          shift, and go to state 68
    EQ          shift, and go to state 69
    GE          shift, and go to state 70
    GT          shift, and go to state 71
    LE          shift, and go to state 72
    LT          shift, and go to state 73
    ASSIGN      shift, and go to state 74
    MUL         shift, and go to state 75
    PLUS        shift, and go to state 76
    MINUS       shift, and go to state 77
    DIV         shift, and go to state 78
    MOD         shift, and go to state 79

    $default  reduce using rule 80 (exprComplete)


State 121

   38 statement: IF LPAR exprComplete . RPAR statError
   39          | IF LPAR exprComplete . RPAR statError ELSE statError
   80 exprComplete: exprComplete . COMMA expr

    RPAR   shift, and go to state 133
    COMMA  shift, and go to state 80


State 122

   40 statement: WHILE LPAR exprComplete . RPAR statError
   80 exprComplete: exprComplete . COMMA expr

    RPAR   shift, and go to state 134
    COMMA  shift, and go to state 80


State 123

   42 statement: RETURN exprComplete SEMI .

    $default  reduce using rule 42 (statement)


State 124

   36 statement: LBRACE error RBRACE .

    $default  reduce using rule 36 (statement)


State 125

   46 statError: error SEMI .

    $default  reduce using rule 46 (statError)


State 126

   46 statError: error . SEMI

    SEMI  shift, and go to state 125


State 127

   35 statement: LBRACE statementsAux RBRACE .

    $default  reduce using rule 35 (statement)


State 128

   44 statementsAux: statementsAux statError .

    $default  reduce using rule 44 (statementsAux)


State 129

   19 parametersAux: parametersAux COMMA parameterDeclaration .

    $default  reduce using rule 19 (parametersAux)


State 130

   76 functionCall: ID LPAR error RPAR .

    $default  reduce using rule 76 (functionCall)


State 131

   75 functionCall: ID LPAR exprList RPAR .

    $default  reduce using rule 75 (functionCall)


State 132

   78 exprList: exprList COMMA . expr

    LPAR     shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    expr          go to state 135
    functionCall  go to state 39


State 133

   38 statement: IF LPAR exprComplete RPAR . statError
   39          | IF LPAR exprComplete RPAR . statError ELSE statError

    error    shift, and go to state 126
    IF       shift, and go to state 41
    WHILE    shift, and go to state 42
    RETURN   shift, and go to state 43
    LPAR     shift, and go to state 30
    LBRACE   shift, and go to state 44
    SEMI     shift, and go to state 46
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    statement     go to state 87
    statError     go to state 136
    expr          go to state 38
    functionCall  go to state 39
    exprComplete  go to state 51


State 134

   40 statement: WHILE LPAR exprComplete RPAR . statError

    error    shift, and go to state 126
    IF       shift, and go to state 41
    WHILE    shift, and go to state 42
    RETURN   shift, and go to state 43
    LPAR     shift, and go to state 30
    LBRACE   shift, and go to state 44
    SEMI     shift, and go to state 46
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    statement     go to state 87
    statError     go to state 137
    expr          go to state 38
    functionCall  go to state 39
    exprComplete  go to state 51


State 135

   47 expr: expr . ASSIGN expr
   48     | expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | expr . MOD expr
   53     | expr . OR expr
   54     | expr . AND expr
   55     | expr . BITWISEAND expr
   56     | expr . BITWISEOR expr
   57     | expr . BITWISEXOR expr
   58     | expr . EQ expr
   59     | expr . NE expr
   60     | expr . LE expr
   61     | expr . GE expr
   62     | expr . LT expr
   63     | expr . GT expr
   78 exprList: exprList COMMA expr .

    AND         shift, and go to state 63
    OR          shift, and go to state 64
    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    NE          shift, and go to state 68
    EQ          shift, and go to state 69
    GE          shift, and go to state 70
    GT          shift, and go to state 71
    LE          shift, and go to state 72
    LT          shift, and go to state 73
    ASSIGN      shift, and go to state 74
    MUL         shift, and go to state 75
    PLUS        shift, and go to state 76
    MINUS       shift, and go to state 77
    DIV         shift, and go to state 78
    MOD         shift, and go to state 79

    $default  reduce using rule 78 (exprList)


State 136

   38 statement: IF LPAR exprComplete RPAR statError .
   39          | IF LPAR exprComplete RPAR statError . ELSE statError

    ELSE  shift, and go to state 138

    $default  reduce using rule 38 (statement)


State 137

   40 statement: WHILE LPAR exprComplete RPAR statError .

    $default  reduce using rule 40 (statement)


State 138

   39 statement: IF LPAR exprComplete RPAR statError ELSE . statError

    error    shift, and go to state 126
    IF       shift, and go to state 41
    WHILE    shift, and go to state 42
    RETURN   shift, and go to state 43
    LPAR     shift, and go to state 30
    LBRACE   shift, and go to state 44
    SEMI     shift, and go to state 46
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    ID       shift, and go to state 34
    CHRLIT   shift, and go to state 35
    REALLIT  shift, and go to state 36
    INTLIT   shift, and go to state 37

    statement     go to state 87
    statError     go to state 139
    expr          go to state 38
    functionCall  go to state 39
    exprComplete  go to state 51


State 139

   39 statement: IF LPAR exprComplete RPAR statError ELSE statError .

    $default  reduce using rule 39 (statement)
