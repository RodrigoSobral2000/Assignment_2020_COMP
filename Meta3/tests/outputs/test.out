Line 28, col 31: Symbol i already defined
===== Global Symbol Table =====
putchar	int(int)
getchar	int(void)
i	int
j	int
k	int
ch0	char
ch1	char
ch2	char
pow	double(double)
infinite_putchar	void(char)
main	int(char)
soma	void(int,char)
subt	void(int,char,double)

===== Function pow Symbol Table =====
return	double
i	double	param

===== Function infinite_putchar Symbol Table =====
return	void
i	char	param
count	double

===== Function main Symbol Table =====
return	int
ch	char	param
ch0	int
calc	int
ch1	char

Program
..Declaration
....Int
....Id(i)
....IntLit(0) - int
..Declaration
....Int
....Id(j)
....IntLit(2) - int
..Declaration
....Int
....Id(k)
..Declaration
....Char
....Id(ch0)
..Declaration
....Char
....Id(ch1)
....IntLit(0) - int
..Declaration
....Char
....Id(ch2)
....ChrLit('0') - int
..FuncDeclaration
....Double
....Id(pow)
....ParamList
......ParamDeclaration
........Double
........Id(i)
..FuncDefinition
....Void
....Id(infinite_putchar)
....ParamList
......ParamDeclaration
........Char
........Id(i)
....FuncBody
......Declaration
........Double
........Id(count)
........IntLit(0) - int
......While
........IntLit(1) - int
........StatList
..........Store - double
............Id(count) - double
............Add - double
..............Id(count) - double
..............Div - int
................IntLit(100) - int
................Id(i) - char
..........Store - double
............Id(count) - double
............Call - double
..............Id(pow) - double(double)
..............Id(count) - double
..........Call - int
............Id(putchar) - int(int)
............Id(i) - char
..FuncDefinition
....Double
....Id(pow)
....ParamList
......ParamDeclaration
........Double
........Id(i)
....FuncBody
......Return
........Mul - double
..........Id(i) - double
..........Id(i) - double
..FuncDefinition
....Int
....Id(main)
....ParamList
......ParamDeclaration
........Char
........Id(ch)
....FuncBody
......Declaration
........Int
........Id(ch0)
........IntLit(20) - int
......Declaration
........Int
........Id(calc)
......Declaration
........Char
........Id(ch1)
......If
........Store - int
..........Id(ch0) - int
..........Or - int
............IntLit(3) - int
............Eq - int
..............Id(ch0) - int
..............IntLit(3) - int
........Call - void
..........Id(infinite_putchar) - void(char)
..........Id(ch0) - int
........Call - void
..........Id(infinite_putchar) - void(char)
..........Store - int
............Id(ch0) - int
............Add - int
..............Id(ch0) - int
..............IntLit(10) - int
......Store - char
........Id(ch2) - char
........Call - int
..........Id(getchar) - int(void)
......Store - char
........Id(ch1) - char
........Call - int
..........Id(getchar) - int(void)
......Store - int
........Id(calc) - int
........Div - int
..........Div - int
............Mul - int
..............Div - int
................Mul - int
..................IntLit(2) - int
..................Comma - int
....................Comma - int
......................Id(i) - int
......................Id(j) - int
....................Id(k) - int
................IntLit(3) - int
..............Id(ch1) - char
............Id(ch2) - char
..........IntLit(2) - int
......Return
........Id(calc) - int
..FuncDeclaration
....Void
....Id(soma)
....ParamList
......ParamDeclaration
........Int
........Id(a)
......ParamDeclaration
........Char
........Id(b)
..FuncDeclaration
....Void
....Id(subt)
....ParamList
......ParamDeclaration
........Int
........Id(i)
......ParamDeclaration
........Char
......ParamDeclaration
........Double
........Id(i)
